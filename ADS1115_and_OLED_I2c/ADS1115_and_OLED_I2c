/*Author: Murilo Fabricio Silva
*IC IFSP 2018
*Example using the ADS1115 and Oled 128x32 and I2C from an Arduino Nano
*/
#include <Adafruit_ADS1015.h>
#include <Arduino.h>
#include <U8g2lib.h>
#include <SPI.h>
#include <Wire.h>

#define ADCADD 0x48
#define OLEDADD 0x3C

U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0);

Adafruit_ADS1115 ads;  /* Use this for the 16-bit version */

float vTensao = 0;
void setup(void) 
{
  Serial.begin(9600);
  Serial.println("Hello!");
  
  Serial.println("Getting single-ended readings from AIN0..3");
  Serial.println("ADC Range: +/- 4.096V (1 bit = 2mV/ADS1015, 0.125mV/ADS1115)");
  
  //Wire.begin();
  ads.begin();
  ads.setGain(GAIN_ONE);        // 1x gain   +/- 4.096V  1 bit = 2mV      0.125mV
  u8g2.begin();
  
}

void loop(void) 
{
  //Wire.beginTransmission(ADCADD);
  int16_t adc0, adc1, adc2, adc3;
  /*adc0 = ads.readADC_SingleEnded(0);
  adc1 = ads.readADC_SingleEnded(1);
  adc2 = ads.readADC_SingleEnded(2);*/
  adc3 = ads.readADC_SingleEnded(3);
  /*Serial.print("AIN0: "); Serial.println(adc0);
  Serial.print("AIN1: "); Serial.println(adc1);
  Serial.print("AIN2: "); Serial.println(adc2);
  */
  
  Serial.print("AIN3: "); Serial.println(String((adc3*0.125)/1000));
  Serial.println(" ");
  //Wire.endTransmission();
  
  
  //Wire.beginTransmission(OLEDADD);
  if(vTensao!=((adc3*0.125)/1000)){
  vTensao=(adc3*0.125)/1000;
  u8g2.clearBuffer();
  u8g2.setFont(u8g2_font_logisoso32_tr);
  u8g2.setCursor(0,32);
  u8g2.print(String((adc3*0.125)/1000));
  u8g2.sendBuffer();
  }
  //delay(100);
}
